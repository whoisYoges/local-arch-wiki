#!/usr/bin/env bash

# Determine the config directory
if [ -n "$XDG_CONFIG_HOME" ]; then
    config_file_dir="$XDG_CONFIG_HOME"/local-arch-wiki
else
    config_file_dir="$HOME"/.config/local-arch-wiki
fi
config_file=${config_file_dir}/config
wikidir="/usr/share/doc/arch-wiki/html/en/"
menu="tofi --prompt-text"
browser="firefox"

if [[ -f "$config_file" ]]; then
    # shellcheck source=/dev/null
    source "${config_file}"
    echo "Config: Sourced user config. (${config_file})"
else
    mkdir -p "$config_file_dir"
    touch "$config_file"

    cat <<EOF > "$config_file"
## Dependencies: arch-wiki-docs, a menu such as dmenu, rofi, tofi,... and a web browser.

## This is the directory where arch wiki's offline html files from package arch-wiki-docs exists.
## By default, english wiki page is selected. However other languages are available.
## Check directory /usr/share/doc/arch-wiki/html/ for other languages and configure accordingly. 
wikidir="/usr/share/doc/arch-wiki/html/en/"

## Your favourite web browser to open wiki pages.
browser="firefox"

## Your menu of choice
# menu="dmenu -i -l 10 -p" 
# menu="dmenu -l 10 -p" #For dmenu with case-insensitive patch
# menu="rofi -dmenu -p"
menu="tofi --prompt-text"
EOF
    # shellcheck source=/dev/null
    source "${config_file}"
    echo "Config: Created and Sourced user config. (${config_file})"
fi

checkDependencies() {
    if [[ ! -d "$wikidir" ]]; then
        echo "Dependency error, please install arch-wiki-docs or configure wiki dir accordingly."
        notify-send "Dependency error!" "Please install arch-wiki-docs or configure wiki directory accordingly in the config file."
        exit 1
    else
        wikidocs="$(find ${wikidir} -iname "*.html")"
    fi

    menu_command=$(echo "$menu" | awk '{print $1}')
    if ! type -P "$menu_command" &>/dev/null; then
        echo "Error: ${menu_command} not found. Please install it or configure accordingly in config."
        notify-send "Error: ${menu_command} not found." "Please install it or configure accordingly in the config file."
        exit 1
    fi

    if ! type -P "$browser" &>/dev/null; then
        echo "Error: ${browser} not found. Please install it or configure accordingly in config."
        notify-send "Error: ${browser} not found." "Please install it or configure accordingly in the config file."
        exit 1
    fi
}

main(){
    choice=$(printf '%s\n' "${wikidocs[@]}" | \
        cut -d '/' -f8- | \
        sed -e 's/_/ /g' -e 's/.html//g' | \
        sort | ${menu} 'Search Wiki: ' "$@") || exit 1

    if [ "$choice" ]; then
        article=$(printf '%s\n' "${wikidir}${choice}.html" | sed 's/ /_/g')
        "${browser}" "${article}"
    else
        echo "Program terminated." && exit 0
    fi
}

checkDependencies
main "$@"
